"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/hangman-game/index.html","f3201d8b0604da88167f2db54b4b6812"],["/hangman-game/static/css/main.f341b147.css","ef804235e03effcb98c411005df38641"],["/hangman-game/static/js/main.a7128aa0.js","cd3305e6f1d2355bc8fd715a921e0237"],["/hangman-game/static/media/AllerDisplay.4cf80f22.ttf","4cf80f22e2f9d7f0b9bd2381d6c5886c"],["/hangman-game/static/media/bar.d63c541b.png","d63c541bdba3c35998842412c1dc6a87"],["/hangman-game/static/media/corpus.a0ed449f.png","a0ed449fdb3a1ee7a38966c007b6d811"],["/hangman-game/static/media/correct.38029e5a.wav","38029e5a3f7d71b40b6e367a14816117"],["/hangman-game/static/media/head.cc2fe300.png","cc2fe300908b62cc4d70bebdebc90745"],["/hangman-game/static/media/left-arm.c41b4080.png","c41b408007e3d78b479e2d1ddd340cfb"],["/hangman-game/static/media/left-foot.a7431eb0.png","a7431eb0b5e1e6842472e5cffd507514"],["/hangman-game/static/media/left-hand.21efd067.png","21efd067c57e00fc77f54e2718ec1510"],["/hangman-game/static/media/left-leg.aa280815.png","aa2808155138feddd8f0a970b7b93598"],["/hangman-game/static/media/neck.88b2d3ed.png","88b2d3ed676b1ec0f93daa27bfc8471f"],["/hangman-game/static/media/right-arm.b6709fba.png","b6709fba6a276ec738d8d45d1814df65"],["/hangman-game/static/media/right-foot.9dd94788.png","9dd94788e322320ec8e66db6af13b873"],["/hangman-game/static/media/right-hand.ea7797c5.png","ea7797c5df8c28217643e67392115ae4"],["/hangman-game/static/media/right-leg.8cc96677.png","8cc966770ecb452af82b80bff8eecebc"],["/hangman-game/static/media/wrong.820a7796.wav","820a7796a013af91d1b28c34337fe3ef"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var n=new URL(e);return"/"===n.pathname.slice(-1)&&(n.pathname+=a),n.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(a){return new Response(a,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,a,n,t){var r=new URL(e);return t&&r.pathname.match(t)||(r.search+=(r.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(n)),r.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var n=new URL(a).pathname;return e.some(function(e){return n.match(e)})},stripIgnoredUrlParameters=function(e,a){var n=new URL(e);return n.hash="",n.search=n.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return a.every(function(a){return!a.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),n.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],n=e[1],t=new URL(a,self.location),r=createCacheKey(t,hashParamName,n,/\.\w{8}\./);return[t.toString(),r]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(n){if(!a.has(n)){var t=new Request(n,{credentials:"same-origin"});return fetch(t).then(function(a){if(!a.ok)throw new Error("Request for "+n+" returned a response with status "+a.status);return cleanResponse(a).then(function(a){return e.put(n,a)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(n){return Promise.all(n.map(function(n){if(!a.has(n.url))return e.delete(n)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var a,n=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(a=urlsToCacheKeys.has(n))||(n=addDirectoryIndex(n,"index.html"),a=urlsToCacheKeys.has(n));!a&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(n=new URL("/hangman-game/index.html",self.location).toString(),a=urlsToCacheKeys.has(n)),a&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(n)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(a){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,a),fetch(e.request)}))}});